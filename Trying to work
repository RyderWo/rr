import java.awt.Color;
import objectdraw.*;

public class Laundry extends WindowController {
    private FramedRect whites;
    private FramedRect darks;
    private FramedRect colors;
    private FramedRect laundry;
    private FilledRect clothesColor;
    private Text correctCounter;
    private Text incorrectCounter;
    private int correctAttempts;
    private int incorrectAttempts;

    public void begin() {
        whites = new FramedRect(125, 200, 50, 50, canvas);
        Text w = new Text("Whites", 130, 215, canvas);
        w.setFontSize(12);

        darks = new FramedRect(275, 200, 50, 50, canvas);
        Text d = new Text("Darks", 280, 215, canvas);
        d.setFontSize(12);

        colors = new FramedRect(425, 200, 50, 50, canvas);
        Text c = new Text("Colors", 432, 215, canvas);
        c.setFontSize(12);

        laundry = new FramedRect(275, 75, 50, 50, canvas);
        clothesColor = new FilledRect(275, 75, 50, 50, canvas);
        setRandomColor();

        correctCounter = new Text("Correct: " + correctAttempts, 125, 280, canvas);
        incorrectCounter = new Text("Incorrect: " + incorrectAttempts, 125, 300, canvas);
        correctCounter.setFontSize(12);
        incorrectCounter.setFontSize(12);
    }
    public static void main(String[] args) {
        Laundry d = new Laundry();
        d.startController(600, 400);
    }
    public void onMousePress(Location point) {
        laundry.sendToFront();
        clothesColor.sendToFront();
    }
    public void onMouseDrag(Location l) {
        double dx = l.getX() - clothesColor.getX();
        double dy = l.getY() - clothesColor.getY();
        clothesColor.move(dx, dy);
    }

    public void onMouseRelease(Location point) {
        if (laundry.overlaps(whites) && isLightColor(clothesColor.getColor())) {
            correctAttempts++;
        } else if (laundry.overlaps(darks) && isDarkColor(clothesColor.getColor())) {
            correctAttempts++;
        } else if (laundry.overlaps(colors) && !isLightColor(clothesColor.getColor()) && !isDarkColor(clothesColor.getColor())) {
            correctAttempts++;
        } else {
            incorrectAttempts++;
        }
        updateCounters();

        clothesColor.moveTo(275, 75);
        setRandomColor();
    }

    private boolean isLightColor(Color color) {
        return color.getRed() > 200 && color.getGreen() > 200 && color.getBlue() > 200;
    }

    private boolean isDarkColor(Color color) {
        return color.getRed() < 100 && color.getGreen() < 100 && color.getBlue() < 100;
    }

    private void setRandomColor() {
        int red = (int) (Math.random() * 256);
        int green = (int) (Math.random() * 256);
        int blue = (int) (Math.random() * 256);
        clothesColor.setColor(new Color(red, green, blue));
    }

    private void updateCounters() {
        correctCounter.setText("Correct: " + correctAttempts);
        incorrectCounter.setText("Incorrect: " + incorrectAttempts);
    }
}
